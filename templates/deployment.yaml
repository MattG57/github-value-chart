{{- if eq .Values.deployment.mode "single-pod" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "github-value-helm.fullname" . }}
  labels:
    {{- include "github-value-helm.labels" . | nindent 4 }}
spec:
  terminationGracePeriodSeconds: 60 
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "github-value-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "github-value-helm.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "github-value-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.app.image.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.app.image.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.app.image.resources | nindent 12 }}
          volumeMounts:
            {{- toYaml .Values.app.volumeMounts | nindent 12 }}
          envFrom:
            - configMapRef:
                name: github-value-config
            - secretRef:
                name: github-value-secret
        - name: mongo
          image: mongo:{{ .Values.db.image.tag | default "latest" }}
          ports:
            - name: mongo
              protocol: TCP
              containerPort: {{ .Values.db.containerPort }}
          env:
            - name: MONGODB_URI
              value: {{ .Values.app.config.MONGODB_URI }}
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.secretName }}
                  key: {{ .Values.db.secretKey }}
          livenessProbe:
            {{- toYaml .Values.db.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.db.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.db.resources | nindent 12 }}
          volumeMounts:
            {{- toYaml .Values.db.volumeMounts | nindent 12 }}
      volumes:
        {{- toYaml .Values.volumes | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
# combined deployment YAML here
# (the one with both containers)
{{- end }}
